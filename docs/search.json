[
  {
    "objectID": "mp01.html",
    "href": "mp01.html",
    "title": "Mini Project 1:Exploring the Most Popular Programming on Netflix",
    "section": "",
    "text": "This analysis looks at Netflix viewing trends around the world, covering 94 countries with a date range from 2021-07-04 to 2025-08-24. This report examines what people are watching, which shows and movies are the most popular, and how preferences can vary by region. The data set includes 2791 unique titles.\n\n\nShow code\n# Acquire Data\nif(!dir.exists(file.path(\"data\", \"mp01\"))){\n  dir.create(file.path(\"data\", \"mp01\"), showWarnings=FALSE, recursive=TRUE)\n}\n\nGLOBAL_TOP_10_FILENAME &lt;- file.path(\"data\", \"mp01\", \"global_top10_alltime.csv\")\n\nif(!file.exists(GLOBAL_TOP_10_FILENAME)){\n  download.file(\"https://www.netflix.com/tudum/top10/data/all-weeks-global.tsv\", \n                destfile=GLOBAL_TOP_10_FILENAME)\n}\n\nCOUNTRY_TOP_10_FILENAME &lt;- file.path(\"data\", \"mp01\", \"country_top10_alltime.csv\")\n\nif(!file.exists(COUNTRY_TOP_10_FILENAME)){\n  download.file(\"https://www.netflix.com/tudum/top10/data/all-weeks-countries.tsv\", \n                destfile=COUNTRY_TOP_10_FILENAME)\n}\n\n\n\n\nShow code\n# Data Import and Preparation\nif(!require(\"tidyverse\")) install.packages(\"tidyverse\")\nlibrary(readr)\nlibrary(dplyr)\n\nGLOBAL_TOP_10 &lt;- read_tsv(GLOBAL_TOP_10_FILENAME)\n\nstr(GLOBAL_TOP_10)\n\n\nspc_tbl_ [8,800 × 9] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ week                      : Date[1:8800], format: \"2025-09-14\" \"2025-09-14\" ...\n $ category                  : chr [1:8800] \"Films (English)\" \"Films (English)\" \"Films (English)\" \"Films (English)\" ...\n $ weekly_rank               : num [1:8800] 1 2 3 4 5 6 7 8 9 10 ...\n $ show_title                : chr [1:8800] \"KPop Demon Hunters\" \"The Wrong Paris\" \"Unknown Number: The High School Catfish\" \"aka Charlie Sheen\" ...\n $ season_title              : chr [1:8800] \"N/A\" \"N/A\" \"N/A\" \"aka Charlie Sheen: Season 1\" ...\n $ weekly_hours_viewed       : num [1:8800] 37700000 22900000 18500000 29500000 14100000 4400000 6500000 4400000 3900000 3300000 ...\n $ runtime                   : num [1:8800] 1.67 1.78 1.58 3.03 2 ...\n $ weekly_views              : num [1:8800] 22600000 12800000 11700000 9700000 7100000 2900000 2800000 2500000 2500000 2300000 ...\n $ cumulative_weeks_in_top_10: num [1:8800] 13 1 3 1 3 14 1 1 7 15 ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   week = col_date(format = \"\"),\n  ..   category = col_character(),\n  ..   weekly_rank = col_double(),\n  ..   show_title = col_character(),\n  ..   season_title = col_character(),\n  ..   weekly_hours_viewed = col_double(),\n  ..   runtime = col_double(),\n  ..   weekly_views = col_double(),\n  ..   cumulative_weeks_in_top_10 = col_double()\n  .. )\n - attr(*, \"problems\")=&lt;externalptr&gt; \n\n\nShow code\nglimpse(GLOBAL_TOP_10)\n\n\nRows: 8,800\nColumns: 9\n$ week                       &lt;date&gt; 2025-09-14, 2025-09-14, 2025-09-14, 2025-0…\n$ category                   &lt;chr&gt; \"Films (English)\", \"Films (English)\", \"Film…\n$ weekly_rank                &lt;dbl&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, …\n$ show_title                 &lt;chr&gt; \"KPop Demon Hunters\", \"The Wrong Paris\", \"U…\n$ season_title               &lt;chr&gt; \"N/A\", \"N/A\", \"N/A\", \"aka Charlie Sheen: Se…\n$ weekly_hours_viewed        &lt;dbl&gt; 37700000, 22900000, 18500000, 29500000, 141…\n$ runtime                    &lt;dbl&gt; 1.6667, 1.7833, 1.5833, 3.0333, 2.0000, 1.5…\n$ weekly_views               &lt;dbl&gt; 22600000, 12800000, 11700000, 9700000, 7100…\n$ cumulative_weeks_in_top_10 &lt;dbl&gt; 13, 1, 3, 1, 3, 14, 1, 1, 7, 15, 1, 4, 2, 3…\n\n\n\n\nShow code\n# Data Cleaning \nGLOBAL_TOP_10 &lt;- GLOBAL_TOP_10 |&gt;\n  mutate(season_title = if_else(season_title %in% c(\"N/A\", \"\"), \n                                NA_character_, \n                                season_title))\n\nCOUNTRY_TOP_10 &lt;- read_tsv(COUNTRY_TOP_10_FILENAME, na = \"N/A\", show_col_types = FALSE) |&gt;\n  mutate(season_title = if_else(season_title == \"\", NA_character_, season_title))\n\nformat_titles &lt;- function(df){\n  colnames(df) &lt;- str_replace_all(colnames(df), \"_\", \" \") |&gt; str_to_title()\n  df\n}\n\ntotal_countries &lt;- COUNTRY_TOP_10 |&gt; distinct(country_iso2) |&gt; nrow()\ndate_range &lt;- paste(min(GLOBAL_TOP_10$week), \"to\", max(GLOBAL_TOP_10$week))\ntotal_shows &lt;- GLOBAL_TOP_10 |&gt; distinct(show_title) |&gt; nrow()\n\nlibrary(DT)\nGLOBAL_TOP_10 |&gt; \n  head(n=20) |&gt;\n  datatable(options=list(searching=FALSE, info=FALSE))\n\n\n\n\n\n\n\n\nShow code\n# Initial Data Exploration\nlibrary(DT)\nGLOBAL_TOP_10 |&gt; \n  head(n=20) |&gt;\n  datatable(options=list(searching=FALSE, info=FALSE))\n\n\n\n\n\n\nShow code\nlibrary(stringr)\nformat_titles &lt;- function(df){\n  colnames(df) &lt;- str_replace_all(colnames(df), \"_\", \" \") |&gt; str_to_title()\n  df\n}\n\nGLOBAL_TOP_10 |&gt; \n  format_titles() |&gt;\n  head(n=20) |&gt;\n  datatable(options=list(searching=FALSE, info=FALSE)) |&gt;\n  formatRound(c('Weekly Hours Viewed', 'Weekly Views'))\n\n\n\n\n\n\n\n\nShow code\n# Drop season_tile\nGLOBAL_TOP_10 |&gt; \n  select(-season_title) |&gt;\n  format_titles() |&gt;\n  head(n=20) |&gt;\n  datatable(options=list(searching=FALSE, info=FALSE)) |&gt;\n  formatRound(c('Weekly Hours Viewed', 'Weekly Views'))\n\n\n\n\n\n\n\n\nShow code\n# Convert to minutes\nGLOBAL_TOP_10 |&gt; \n  mutate(`runtime_(minutes)` = round(60 * runtime)) |&gt;\n  select(-season_title, \n         -runtime) |&gt;\n  format_titles() |&gt;\n  head(n=20) |&gt;\n  datatable(options=list(searching=FALSE, info=FALSE)) |&gt;\n  formatRound(c('Weekly Hours Viewed', 'Weekly Views'))"
  },
  {
    "objectID": "mp01.html#executive-summary",
    "href": "mp01.html#executive-summary",
    "title": "Mini Project 1:Exploring the Most Popular Programming on Netflix",
    "section": "",
    "text": "This analysis looks at Netflix viewing trends around the world, covering 94 countries with a date range from 2021-07-04 to 2025-08-24. This report examines what people are watching, which shows and movies are the most popular, and how preferences can vary by region. The data set includes 2791 unique titles.\n\n\nShow code\n# Acquire Data\nif(!dir.exists(file.path(\"data\", \"mp01\"))){\n  dir.create(file.path(\"data\", \"mp01\"), showWarnings=FALSE, recursive=TRUE)\n}\n\nGLOBAL_TOP_10_FILENAME &lt;- file.path(\"data\", \"mp01\", \"global_top10_alltime.csv\")\n\nif(!file.exists(GLOBAL_TOP_10_FILENAME)){\n  download.file(\"https://www.netflix.com/tudum/top10/data/all-weeks-global.tsv\", \n                destfile=GLOBAL_TOP_10_FILENAME)\n}\n\nCOUNTRY_TOP_10_FILENAME &lt;- file.path(\"data\", \"mp01\", \"country_top10_alltime.csv\")\n\nif(!file.exists(COUNTRY_TOP_10_FILENAME)){\n  download.file(\"https://www.netflix.com/tudum/top10/data/all-weeks-countries.tsv\", \n                destfile=COUNTRY_TOP_10_FILENAME)\n}\n\n\n\n\nShow code\n# Data Import and Preparation\nif(!require(\"tidyverse\")) install.packages(\"tidyverse\")\nlibrary(readr)\nlibrary(dplyr)\n\nGLOBAL_TOP_10 &lt;- read_tsv(GLOBAL_TOP_10_FILENAME)\n\nstr(GLOBAL_TOP_10)\n\n\nspc_tbl_ [8,800 × 9] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ week                      : Date[1:8800], format: \"2025-09-14\" \"2025-09-14\" ...\n $ category                  : chr [1:8800] \"Films (English)\" \"Films (English)\" \"Films (English)\" \"Films (English)\" ...\n $ weekly_rank               : num [1:8800] 1 2 3 4 5 6 7 8 9 10 ...\n $ show_title                : chr [1:8800] \"KPop Demon Hunters\" \"The Wrong Paris\" \"Unknown Number: The High School Catfish\" \"aka Charlie Sheen\" ...\n $ season_title              : chr [1:8800] \"N/A\" \"N/A\" \"N/A\" \"aka Charlie Sheen: Season 1\" ...\n $ weekly_hours_viewed       : num [1:8800] 37700000 22900000 18500000 29500000 14100000 4400000 6500000 4400000 3900000 3300000 ...\n $ runtime                   : num [1:8800] 1.67 1.78 1.58 3.03 2 ...\n $ weekly_views              : num [1:8800] 22600000 12800000 11700000 9700000 7100000 2900000 2800000 2500000 2500000 2300000 ...\n $ cumulative_weeks_in_top_10: num [1:8800] 13 1 3 1 3 14 1 1 7 15 ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   week = col_date(format = \"\"),\n  ..   category = col_character(),\n  ..   weekly_rank = col_double(),\n  ..   show_title = col_character(),\n  ..   season_title = col_character(),\n  ..   weekly_hours_viewed = col_double(),\n  ..   runtime = col_double(),\n  ..   weekly_views = col_double(),\n  ..   cumulative_weeks_in_top_10 = col_double()\n  .. )\n - attr(*, \"problems\")=&lt;externalptr&gt; \n\n\nShow code\nglimpse(GLOBAL_TOP_10)\n\n\nRows: 8,800\nColumns: 9\n$ week                       &lt;date&gt; 2025-09-14, 2025-09-14, 2025-09-14, 2025-0…\n$ category                   &lt;chr&gt; \"Films (English)\", \"Films (English)\", \"Film…\n$ weekly_rank                &lt;dbl&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, …\n$ show_title                 &lt;chr&gt; \"KPop Demon Hunters\", \"The Wrong Paris\", \"U…\n$ season_title               &lt;chr&gt; \"N/A\", \"N/A\", \"N/A\", \"aka Charlie Sheen: Se…\n$ weekly_hours_viewed        &lt;dbl&gt; 37700000, 22900000, 18500000, 29500000, 141…\n$ runtime                    &lt;dbl&gt; 1.6667, 1.7833, 1.5833, 3.0333, 2.0000, 1.5…\n$ weekly_views               &lt;dbl&gt; 22600000, 12800000, 11700000, 9700000, 7100…\n$ cumulative_weeks_in_top_10 &lt;dbl&gt; 13, 1, 3, 1, 3, 14, 1, 1, 7, 15, 1, 4, 2, 3…\n\n\n\n\nShow code\n# Data Cleaning \nGLOBAL_TOP_10 &lt;- GLOBAL_TOP_10 |&gt;\n  mutate(season_title = if_else(season_title %in% c(\"N/A\", \"\"), \n                                NA_character_, \n                                season_title))\n\nCOUNTRY_TOP_10 &lt;- read_tsv(COUNTRY_TOP_10_FILENAME, na = \"N/A\", show_col_types = FALSE) |&gt;\n  mutate(season_title = if_else(season_title == \"\", NA_character_, season_title))\n\nformat_titles &lt;- function(df){\n  colnames(df) &lt;- str_replace_all(colnames(df), \"_\", \" \") |&gt; str_to_title()\n  df\n}\n\ntotal_countries &lt;- COUNTRY_TOP_10 |&gt; distinct(country_iso2) |&gt; nrow()\ndate_range &lt;- paste(min(GLOBAL_TOP_10$week), \"to\", max(GLOBAL_TOP_10$week))\ntotal_shows &lt;- GLOBAL_TOP_10 |&gt; distinct(show_title) |&gt; nrow()\n\nlibrary(DT)\nGLOBAL_TOP_10 |&gt; \n  head(n=20) |&gt;\n  datatable(options=list(searching=FALSE, info=FALSE))\n\n\n\n\n\n\n\n\nShow code\n# Initial Data Exploration\nlibrary(DT)\nGLOBAL_TOP_10 |&gt; \n  head(n=20) |&gt;\n  datatable(options=list(searching=FALSE, info=FALSE))\n\n\n\n\n\n\nShow code\nlibrary(stringr)\nformat_titles &lt;- function(df){\n  colnames(df) &lt;- str_replace_all(colnames(df), \"_\", \" \") |&gt; str_to_title()\n  df\n}\n\nGLOBAL_TOP_10 |&gt; \n  format_titles() |&gt;\n  head(n=20) |&gt;\n  datatable(options=list(searching=FALSE, info=FALSE)) |&gt;\n  formatRound(c('Weekly Hours Viewed', 'Weekly Views'))\n\n\n\n\n\n\n\n\nShow code\n# Drop season_tile\nGLOBAL_TOP_10 |&gt; \n  select(-season_title) |&gt;\n  format_titles() |&gt;\n  head(n=20) |&gt;\n  datatable(options=list(searching=FALSE, info=FALSE)) |&gt;\n  formatRound(c('Weekly Hours Viewed', 'Weekly Views'))\n\n\n\n\n\n\n\n\nShow code\n# Convert to minutes\nGLOBAL_TOP_10 |&gt; \n  mutate(`runtime_(minutes)` = round(60 * runtime)) |&gt;\n  select(-season_title, \n         -runtime) |&gt;\n  format_titles() |&gt;\n  head(n=20) |&gt;\n  datatable(options=list(searching=FALSE, info=FALSE)) |&gt;\n  formatRound(c('Weekly Hours Viewed', 'Weekly Views'))"
  },
  {
    "objectID": "mp01.html#exploratory-questions",
    "href": "mp01.html#exploratory-questions",
    "title": "Mini Project 1:Exploring the Most Popular Programming on Netflix",
    "section": "Exploratory Questions",
    "text": "Exploratory Questions\n\nHow many different countries does Netflix operate in?\n\n\n\nShow code\ncountry_count &lt;- COUNTRY_TOP_10 |&gt; \n  distinct(country_iso2) |&gt; \n  nrow()\n\n\nNetflix operates in 94 countries\n\nWhich non-English-language film has spent the most cumulative weeks in the global top 10? How many weeks did it spend?\n\n\n\nShow code\nnon_english_film &lt;- GLOBAL_TOP_10 |&gt;\n  filter(category == \"Films (Non-English)\") |&gt;\n  group_by(show_title) |&gt;\n  summarise(total_weeks = max(cumulative_weeks_in_top_10, na.rm = TRUE)) |&gt;\n  arrange(desc(total_weeks)) |&gt;\n  slice(1)\n\nnon_english_film_title &lt;- non_english_film$show_title[1]\nnon_english_film_weeks &lt;- non_english_film$total_weeks[1]\n\n\nThe non-English film with the most weeks in the global Top 10 is All Quiet on the Western Front, with 23 weeks.\n\nWhat is the longest film (English or non-English) to have ever appeared in the Netflix global Top 10? How long is it in minutes? [Note that Netflix does not provide runtime for programs before a certain date, so your answer here may be a bit limited.]\n\n\n\nShow code\nlongest_film &lt;- GLOBAL_TOP_10 |&gt;\n  filter(str_detect(category, \"Films\")) |&gt;\n  filter(!is.na(runtime)) |&gt;\n  mutate(runtime_minutes = round(60 * runtime)) |&gt;\n  arrange(desc(runtime_minutes)) |&gt;\n  slice(1)\n\nlongest_film_title &lt;- longest_film$show_title[1]\nlongest_film_minutes &lt;- longest_film$runtime_minutes[1]\n\n\nThe longest film to appear in the Netflix global Top 10 is Pushpa 2: The Rule (Reloaded Version), with a runtime of 224 minutes.\n\nFor each of the four categories, what program has the most total hours of global viewership?\n\n\n\nShow code\ntop_programs_by_category &lt;- GLOBAL_TOP_10 |&gt;\n  group_by(category, show_title) |&gt;\n  summarise(total_hours = sum(weekly_hours_viewed, na.rm = TRUE), .groups = \"drop\") |&gt;\n  group_by(category) |&gt;\n  slice_max(total_hours, n = 1) |&gt;\n  arrange(desc(total_hours))\ntop_programs_by_category |&gt;\n  mutate(total_hours = scales::comma(total_hours)) |&gt;\n  select(category, show_title, total_hours) |&gt;\n  format_titles() |&gt;\n  datatable(\n    options = list(searching = FALSE, info = FALSE),\n    caption = \"Top Programs by Category\"\n  )\n\n\n\n\n\n\n\nWhich TV show had the longest run in a country’s Top 10? How long was this run and in what country did it occur?\n\n\n\nShow code\nlongest_country_run &lt;- COUNTRY_TOP_10 |&gt;\n  filter(str_detect(category, \"TV\")) |&gt;\n  group_by(country_name, show_title) |&gt;\n  summarise(max_weeks = max(cumulative_weeks_in_top_10, na.rm = TRUE), .groups = \"drop\") |&gt;\n  arrange(desc(max_weeks)) |&gt;\n  slice(1)\n\nlongest_country_run_title &lt;- longest_country_run$show_title[1]\nlongest_country_run_country &lt;- longest_country_run$country_name[1]\nlongest_country_run_weeks &lt;- longest_country_run$max_weeks[1]\n\n\nThe TV show with the longest run in a country’s Top 10 is Money Heist, lasting 127 weeks in Pakistan.\n\nNetflix provides over 200 weeks of service history for all but one country in our data set. Which country is this and when did Netflix cease operations in that country?\n\n\n\nShow code\nlibrary(lubridate)\ncountry_weeks &lt;- COUNTRY_TOP_10 |&gt;\n  group_by(country_name) |&gt;\n  summarise(\n    weeks_count = n_distinct(week),\n    last_week = max(week, na.rm = TRUE),\n    .groups = \"drop\"\n  ) |&gt;\n  filter(weeks_count &lt; 200) |&gt;\n  arrange(weeks_count)\n\nshort_country_name &lt;- country_weeks$country_name[1]\nshort_country_weeks &lt;- country_weeks$weeks_count[1]\nshort_country_last_week &lt;- country_weeks$last_week[1]\n\n\nThe country with fewer than 200 weeks of service history is Russia, with 35 weeks of data. Netflix ceased operations there in 2022-02-27.\n7.What is the total viewership of the TV show Squid Game? Note that there are three seasons total and we are looking for the total number of hours watched across all seasons.\n\n\nShow code\nsquid_game_total &lt;- GLOBAL_TOP_10 |&gt;\n  filter(str_detect(show_title, \"Squid Game\")) |&gt;\n  summarise(total_hours = sum(weekly_hours_viewed, na.rm = TRUE)) |&gt;\n  pull(total_hours)\nsquid_game_total_fmt &lt;- scales::comma(squid_game_total)\n\n\nThe total viewership of Squid Game across all seasons is 5,310,000,000 hours.\n8.The movie Red Notice has a runtime of 1 hour and 58 minutes. Approximately how many views did it receive in 2021? [Hint: The year() function from the lubridate package may be helpful.]\n\n\nShow code\nlibrary(lubridate)\n\nred_notice_2021 &lt;- GLOBAL_TOP_10 |&gt;\n  filter(show_title == \"Red Notice\", year(week) == 2021) |&gt;\n  summarise(total_views = sum(weekly_views, na.rm = TRUE)) |&gt;\n  pull(total_views)\n\n\nThe movie Red Notice received approximately 0 views in 2021.\n\nHow many Films reached Number 1 in the US but did not originally debut there? That is, find films that first appeared on the Top 10 chart at, e.g., Number 4 but then became more popular and eventually hit Number 1? What is the most recent film to pull this off? [Hint: You will want to create a new variable to identify films that topped the charts at any point during their run.]\n\n\n\nShow code\n# Filter US films and calculate debut and whether they ever hit #1\nus_films &lt;- COUNTRY_TOP_10 |&gt;\n  filter(country_name == \"United States\", str_detect(category, \"Films\")) |&gt;\n  group_by(show_title) |&gt;\n  arrange(week) |&gt;\n  mutate(\n    ever_hit_1 = any(weekly_rank == 1),\n    debut_rank = first(weekly_rank),\n    latest_week = max(week)\n  ) |&gt;\n  filter(ever_hit_1 == TRUE, debut_rank &gt; 1) |&gt;\n  ungroup()\n\n# Total number of films\nus_films_count &lt;- nrow(distinct(us_films, show_title))\n\n# Most recent film to achieve this\nmost_recent_us_film &lt;- us_films |&gt;\n  arrange(desc(latest_week)) |&gt;\n  slice(1) |&gt;\n  pull(show_title)\n\n\n45 films are eventually reached Number 1 in the US despite not debuting there.\nThe most recent film to achieve this feat is KPop Demon Hunters.\n10.Which TV show/season hit the top 10 in the most countries in its debut week? In how many countries did it chart?\n\n\nShow code\ntv_debut_countries &lt;- COUNTRY_TOP_10 |&gt;\n  filter(str_detect(category, \"TV\")) |&gt;\n  group_by(show_title) |&gt;\n  filter(week == min(week)) |&gt;\n  summarise(countries_count = n_distinct(country_name), .groups = \"drop\") |&gt;\n  arrange(desc(countries_count)) |&gt;\n  slice(1)\n\ntop_tv_debut_title &lt;- tv_debut_countries$show_title[1]\ntop_tv_debut_countries &lt;- tv_debut_countries$countries_count[1]\n\n\nThe TV show/season that hit the Top 10 in the most countries during its debut week is Emily in Paris, charting in 94 countries."
  }
]